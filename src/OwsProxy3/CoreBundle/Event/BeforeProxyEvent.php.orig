<?php

namespace OwsProxy3\CoreBundle\Event;

use OwsProxy3\CoreBundle\Component\ProxyQuery;
use Symfony\Component\EventDispatcher\Event;

/**
 * Description of BeforeProxyEvent
 *
 * @author A.R.Pour
 * @author Paul Schmidt
 */
<<<<<<< HEAD
class BeforeProxyEvent extends Event {
//    protected $url;
//    
//    public function __construct(Url $url) {
//        $this->url = $url;
//    }
//    
//    public function getUrl() {
//        return $this->url;
//    }
    protected $url;
    protected $browserResponse;
    protected $success = false;
    
    public function __construct(Url $url, $browserResponse) {
        $this->url = $url;
        $this->browserResponse = $browserResponse;
    }
    
    public function getUrl() {
        return $this->url;
    }
    
    public function getBrowserResponse() {
        return $this->browserResponse;
    }
    
    public function getSuccess(){
        return $this->success;
    }
    
    public function setSuccess($success){
        $this->success = $success;
=======
class BeforeProxyEvent extends Event
{

    /**
     *
     * @var ProxyQuery $proxy_query the proxy query
     */
    protected $proxy_query;

    /**
     * Creates an instance
     * 
     * @param ProxyQuery $proxy_query the proxy query
     */
    public function __construct(ProxyQuery $proxy_query)
    {
        $this->proxy_query = $proxy_query;
>>>>>>> 05fa27f76bfdc180b5d4ba535cf711c234837427
    }

    /**
     * Returns the proxy query
     * 
     * @return ProxyQuery the proxy query
     */
    public function getProxyQuery()
    {
        return $this->proxy_query;
    }

}
